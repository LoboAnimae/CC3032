// Generated from yapl.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class yaplLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly CLASS = 10;
	public static readonly ELSE = 11;
	public static readonly FALSE = 12;
	public static readonly FI = 13;
	public static readonly IF = 14;
	public static readonly IN = 15;
	public static readonly INHERITS = 16;
	public static readonly ISVOID = 17;
	public static readonly LET = 18;
	public static readonly LOOP = 19;
	public static readonly POOL = 20;
	public static readonly THEN = 21;
	public static readonly WHILE = 22;
	public static readonly CASE = 23;
	public static readonly ESAC = 24;
	public static readonly NEW = 25;
	public static readonly OF = 26;
	public static readonly TRUE = 27;
	public static readonly STRING = 28;
	public static readonly INT = 29;
	public static readonly TYPE = 30;
	public static readonly IDENTIFIER = 31;
	public static readonly ASSIGNMENT = 32;
	public static readonly CASE_ARROW = 33;
	public static readonly ADD = 34;
	public static readonly MINUS = 35;
	public static readonly MULTIPLY = 36;
	public static readonly DIVISION = 37;
	public static readonly LESS_THAN = 38;
	public static readonly LESS_EQUAL = 39;
	public static readonly EQUAL = 40;
	public static readonly INTEGER_NEGATIVE = 41;
	public static readonly OPEN_COMMENT = 42;
	public static readonly CLOSE_COMMENT = 43;
	public static readonly COMMENT = 44;
	public static readonly ONE_LINE_COMMENT = 45;
	public static readonly WHITESPACE = 46;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"CLASS", "ELSE", "FALSE", "FI", "IF", "IN", "INHERITS", "ISVOID", "LET", 
		"LOOP", "POOL", "THEN", "WHILE", "CASE", "ESAC", "NEW", "OF", "TRUE", 
		"STRING", "INT", "TYPE", "IDENTIFIER", "ASSIGNMENT", "CASE_ARROW", "ADD", 
		"MINUS", "MULTIPLY", "DIVISION", "LESS_THAN", "LESS_EQUAL", "EQUAL", "INTEGER_NEGATIVE", 
		"A", "C", "D", "E", "F", "H", "I", "L", "N", "O", "P", "R", "S", "T", 
		"U", "V", "W", "ESC", "UNICODE", "HEX", "OPEN_COMMENT", "CLOSE_COMMENT", 
		"COMMENT", "ONE_LINE_COMMENT", "WHITESPACE",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "';'", "'{'", "'}'", "'('", "','", "')'", "':'", "'@'", "'.'", 
		undefined, undefined, "'false'", undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, "'true'", undefined, undefined, undefined, 
		undefined, "'<-'", "'=>'", "'+'", "'-'", "'*'", "'/'", "'<'", "'<='", 
		"'='", "'~'", "'(*'", "'*)'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, "CLASS", "ELSE", "FALSE", "FI", "IF", 
		"IN", "INHERITS", "ISVOID", "LET", "LOOP", "POOL", "THEN", "WHILE", "CASE", 
		"ESAC", "NEW", "OF", "TRUE", "STRING", "INT", "TYPE", "IDENTIFIER", "ASSIGNMENT", 
		"CASE_ARROW", "ADD", "MINUS", "MULTIPLY", "DIVISION", "LESS_THAN", "LESS_EQUAL", 
		"EQUAL", "INTEGER_NEGATIVE", "OPEN_COMMENT", "CLOSE_COMMENT", "COMMENT", 
		"ONE_LINE_COMMENT", "WHITESPACE",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(yaplLexer._LITERAL_NAMES, yaplLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return yaplLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(yaplLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "yapl.g4"; }

	// @Override
	public get ruleNames(): string[] { return yaplLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return yaplLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return yaplLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return yaplLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x020\u017C\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x03\x02\x03\x02\x03" +
		"\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03" +
		"\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\v" +
		"\x03\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03" +
		"\r\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03" +
		"\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03" +
		"\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13\x03" +
		"\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03" +
		"\x15\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03" +
		"\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03" +
		"\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03" +
		"\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03" +
		"\x1C\x03\x1D\x03\x1D\x03\x1D\x07\x1D\xF6\n\x1D\f\x1D\x0E\x1D\xF9\v\x1D" +
		"\x03\x1D\x03\x1D\x03\x1E\x06\x1E\xFE\n\x1E\r\x1E\x0E\x1E\xFF\x03\x1F\x03" +
		"\x1F\x07\x1F\u0104\n\x1F\f\x1F\x0E\x1F\u0107\v\x1F\x03 \x03 \x07 \u010B" +
		"\n \f \x0E \u010E\v \x03!\x03!\x03!\x03\"\x03\"\x03\"\x03#\x03#\x03$\x03" +
		"$\x03%\x03%\x03&\x03&\x03\'\x03\'\x03(\x03(\x03(\x03)\x03)\x03*\x03*\x03" +
		"+\x03+\x03,\x03,\x03-\x03-\x03.\x03.\x03/\x03/\x030\x030\x031\x031\x03" +
		"2\x032\x033\x033\x034\x034\x035\x035\x036\x036\x037\x037\x038\x038\x03" +
		"9\x039\x03:\x03:\x03;\x03;\x03<\x03<\x03<\x05<\u014C\n<\x03=\x03=\x03" +
		"=\x03=\x03=\x03=\x03>\x03>\x03?\x03?\x03?\x03@\x03@\x03@\x03A\x03A\x03" +
		"A\x07A\u015F\nA\fA\x0EA\u0162\vA\x03A\x03A\x03A\x03A\x03B\x03B\x03B\x03" +
		"B\x07B\u016C\nB\fB\x0EB\u016F\vB\x03B\x05B\u0172\nB\x03B\x03B\x03C\x06" +
		"C\u0177\nC\rC\x0EC\u0178\x03C\x03C\x03\u0160\x02\x02D\x03\x02\x03\x05" +
		"\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13" +
		"\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02" +
		"\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/" +
		"\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?" +
		"\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02)Q\x02*S\x02+U\x02" +
		"\x02W\x02\x02Y\x02\x02[\x02\x02]\x02\x02_\x02\x02a\x02\x02c\x02\x02e\x02" +
		"\x02g\x02\x02i\x02\x02k\x02\x02m\x02\x02o\x02\x02q\x02\x02s\x02\x02u\x02" +
		"\x02w\x02\x02y\x02\x02{\x02\x02}\x02,\x7F\x02-\x81\x02.\x83\x02/\x85\x02" +
		"0\x03\x02\x1C\x04\x02$$^^\x03\x022;\x03\x02C\\\x06\x022;C\\aac|\x03\x02" +
		"c|\x04\x02CCcc\x04\x02EEee\x04\x02FFff\x04\x02GGgg\x04\x02HHhh\x04\x02" +
		"JJjj\x04\x02KKkk\x04\x02NNnn\x04\x02PPpp\x04\x02QQqq\x04\x02RRrr\x04\x02" +
		"TTtt\x04\x02UUuu\x04\x02VVvv\x04\x02WWww\x04\x02XXxx\x04\x02YYyy\n\x02" +
		"$$11^^ddhhppttvv\x05\x022;CHch\x03\x02\f\f\x05\x02\v\f\x0E\x0F\"\"\x02" +
		"\u0172\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02" +
		"\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02" +
		"\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02" +
		"\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02" +
		"\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02" +
		"\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02" +
		"\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03" +
		"\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02" +
		"\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02" +
		";\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02" +
		"\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02" +
		"\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03" +
		"\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02}\x03\x02\x02" +
		"\x02\x02\x7F\x03\x02\x02\x02\x02\x81\x03\x02\x02\x02\x02\x83\x03\x02\x02" +
		"\x02\x02\x85\x03\x02\x02\x02\x03\x87\x03\x02\x02\x02\x05\x89\x03\x02\x02" +
		"\x02\x07\x8B\x03\x02\x02\x02\t\x8D\x03\x02\x02\x02\v\x8F\x03\x02\x02\x02" +
		"\r\x91\x03\x02\x02\x02\x0F\x93\x03\x02\x02\x02\x11\x95\x03\x02\x02\x02" +
		"\x13\x97\x03\x02\x02\x02\x15\x99\x03\x02\x02\x02\x17\x9F\x03\x02\x02\x02" +
		"\x19\xA4\x03\x02\x02\x02\x1B\xAA\x03\x02\x02\x02\x1D\xAD\x03\x02\x02\x02" +
		"\x1F\xB0\x03\x02\x02\x02!\xB3\x03\x02\x02\x02#\xBC\x03\x02\x02\x02%\xC3" +
		"\x03\x02\x02\x02\'\xC7\x03\x02\x02\x02)\xCC\x03\x02\x02\x02+\xD1\x03\x02" +
		"\x02\x02-\xD6\x03\x02\x02\x02/\xDC\x03\x02\x02\x021\xE1\x03\x02\x02\x02" +
		"3\xE6\x03\x02\x02\x025\xEA\x03\x02\x02\x027\xED\x03\x02\x02\x029\xF2\x03" +
		"\x02\x02\x02;\xFD\x03\x02\x02\x02=\u0101\x03\x02\x02\x02?\u0108\x03\x02" +
		"\x02\x02A\u010F\x03\x02\x02\x02C\u0112\x03\x02\x02\x02E\u0115\x03\x02" +
		"\x02\x02G\u0117\x03\x02\x02\x02I\u0119\x03\x02\x02\x02K\u011B\x03\x02" +
		"\x02\x02M\u011D\x03\x02\x02\x02O\u011F\x03\x02\x02\x02Q\u0122\x03\x02" +
		"\x02\x02S\u0124\x03\x02\x02\x02U\u0126\x03\x02\x02\x02W\u0128\x03\x02" +
		"\x02\x02Y\u012A\x03\x02\x02\x02[\u012C\x03\x02\x02\x02]\u012E\x03\x02" +
		"\x02\x02_\u0130\x03\x02\x02\x02a\u0132\x03\x02\x02\x02c\u0134\x03\x02" +
		"\x02\x02e\u0136\x03\x02\x02\x02g\u0138\x03\x02\x02\x02i\u013A\x03\x02" +
		"\x02\x02k\u013C\x03\x02\x02\x02m\u013E\x03\x02\x02\x02o\u0140\x03\x02" +
		"\x02\x02q\u0142\x03\x02\x02\x02s\u0144\x03\x02\x02\x02u\u0146\x03\x02" +
		"\x02\x02w\u0148\x03\x02\x02\x02y\u014D\x03\x02\x02\x02{\u0153\x03\x02" +
		"\x02\x02}\u0155\x03\x02\x02\x02\x7F\u0158\x03\x02\x02\x02\x81\u015B\x03" +
		"\x02\x02\x02\x83\u0167\x03\x02\x02\x02\x85\u0176\x03\x02\x02\x02\x87\x88" +
		"\x07=\x02\x02\x88\x04\x03\x02\x02\x02\x89\x8A\x07}\x02\x02\x8A\x06\x03" +
		"\x02\x02\x02\x8B\x8C\x07\x7F\x02\x02\x8C\b\x03\x02\x02\x02\x8D\x8E\x07" +
		"*\x02\x02\x8E\n\x03\x02\x02\x02\x8F\x90\x07.\x02\x02\x90\f\x03\x02\x02" +
		"\x02\x91\x92\x07+\x02\x02\x92\x0E\x03\x02\x02\x02\x93\x94\x07<\x02\x02" +
		"\x94\x10\x03\x02\x02\x02\x95\x96\x07B\x02\x02\x96\x12\x03\x02\x02\x02" +
		"\x97\x98\x070\x02\x02\x98\x14\x03\x02\x02\x02\x99\x9A\x05W,\x02\x9A\x9B" +
		"\x05c2\x02\x9B\x9C\x05U+\x02\x9C\x9D\x05m7\x02\x9D\x9E\x05m7\x02\x9E\x16" +
		"\x03\x02\x02\x02\x9F\xA0\x05[.\x02\xA0\xA1\x05c2\x02\xA1\xA2\x05m7\x02" +
		"\xA2\xA3\x05[.\x02\xA3\x18\x03\x02\x02\x02\xA4\xA5\x07h\x02\x02\xA5\xA6" +
		"\x07c\x02\x02\xA6\xA7\x07n\x02\x02\xA7\xA8\x07u\x02\x02\xA8\xA9\x07g\x02" +
		"\x02\xA9\x1A\x03\x02\x02\x02\xAA\xAB\x05]/\x02\xAB\xAC\x05a1\x02\xAC\x1C" +
		"\x03\x02\x02\x02\xAD\xAE\x05a1\x02\xAE\xAF\x05]/\x02\xAF\x1E\x03\x02\x02" +
		"\x02\xB0\xB1\x05a1\x02\xB1\xB2\x05e3\x02\xB2 \x03\x02\x02\x02\xB3\xB4" +
		"\x05a1\x02\xB4\xB5\x05e3\x02\xB5\xB6\x05_0\x02\xB6\xB7\x05[.\x02\xB7\xB8" +
		"\x05k6\x02\xB8\xB9\x05a1\x02\xB9\xBA\x05o8\x02\xBA\xBB\x05m7\x02\xBB\"" +
		"\x03\x02\x02\x02\xBC\xBD\x05a1\x02\xBD\xBE\x05m7\x02\xBE\xBF\x05s:\x02" +
		"\xBF\xC0\x05g4\x02\xC0\xC1\x05a1\x02\xC1\xC2\x05Y-\x02\xC2$\x03\x02\x02" +
		"\x02\xC3\xC4\x05c2\x02\xC4\xC5\x05[.\x02\xC5\xC6\x05o8\x02\xC6&\x03\x02" +
		"\x02\x02\xC7\xC8\x05c2\x02\xC8\xC9\x05g4\x02\xC9\xCA\x05g4\x02\xCA\xCB" +
		"\x05i5\x02\xCB(\x03\x02\x02\x02\xCC\xCD\x05i5\x02\xCD\xCE\x05g4\x02\xCE" +
		"\xCF\x05g4\x02\xCF\xD0\x05c2\x02\xD0*\x03\x02\x02\x02\xD1\xD2\x05o8\x02" +
		"\xD2\xD3\x05_0\x02\xD3\xD4\x05[.\x02\xD4\xD5\x05e3\x02\xD5,\x03\x02\x02" +
		"\x02\xD6\xD7\x05u;\x02\xD7\xD8\x05_0\x02\xD8\xD9\x05a1\x02\xD9\xDA\x05" +
		"c2\x02\xDA\xDB\x05[.\x02\xDB.\x03\x02\x02\x02\xDC\xDD\x05W,\x02\xDD\xDE" +
		"\x05U+\x02\xDE\xDF\x05m7\x02\xDF\xE0\x05[.\x02\xE00\x03\x02\x02\x02\xE1" +
		"\xE2\x05[.\x02\xE2\xE3\x05m7\x02\xE3\xE4\x05U+\x02\xE4\xE5\x05W,\x02\xE5" +
		"2\x03\x02\x02\x02\xE6\xE7\x05e3\x02\xE7\xE8\x05[.\x02\xE8\xE9\x05u;\x02" +
		"\xE94\x03\x02\x02\x02\xEA\xEB\x05g4\x02\xEB\xEC\x05]/\x02\xEC6\x03\x02" +
		"\x02\x02\xED\xEE\x07v\x02\x02\xEE\xEF\x07t\x02\x02\xEF\xF0\x07w\x02\x02" +
		"\xF0\xF1\x07g\x02\x02\xF18\x03\x02\x02\x02\xF2\xF7\x07$\x02\x02\xF3\xF6" +
		"\x05w<\x02\xF4\xF6\n\x02\x02\x02\xF5\xF3\x03\x02\x02\x02\xF5\xF4\x03\x02" +
		"\x02\x02\xF6\xF9\x03\x02\x02\x02\xF7\xF5\x03\x02\x02\x02\xF7\xF8\x03\x02" +
		"\x02\x02\xF8\xFA\x03\x02\x02\x02\xF9\xF7\x03\x02\x02\x02\xFA\xFB\x07$" +
		"\x02\x02\xFB:\x03\x02\x02\x02\xFC\xFE\t\x03\x02\x02\xFD\xFC\x03\x02\x02" +
		"\x02\xFE\xFF\x03\x02\x02\x02\xFF\xFD\x03\x02\x02\x02\xFF\u0100\x03\x02" +
		"\x02\x02\u0100<\x03\x02\x02\x02\u0101\u0105\t\x04\x02\x02\u0102\u0104" +
		"\t\x05\x02\x02\u0103\u0102\x03\x02\x02\x02\u0104\u0107\x03\x02\x02\x02" +
		"\u0105\u0103\x03\x02\x02\x02\u0105\u0106\x03\x02\x02\x02\u0106>\x03\x02" +
		"\x02\x02\u0107\u0105\x03\x02\x02\x02\u0108\u010C\t\x06\x02\x02\u0109\u010B" +
		"\t\x05\x02\x02\u010A\u0109\x03\x02\x02\x02\u010B\u010E\x03\x02\x02\x02" +
		"\u010C\u010A\x03\x02\x02\x02\u010C\u010D\x03\x02\x02\x02\u010D@\x03\x02" +
		"\x02\x02\u010E\u010C\x03\x02\x02\x02\u010F\u0110\x07>\x02\x02\u0110\u0111" +
		"\x07/\x02\x02\u0111B\x03\x02\x02\x02\u0112\u0113\x07?\x02\x02\u0113\u0114" +
		"\x07@\x02\x02\u0114D\x03\x02\x02\x02\u0115\u0116\x07-\x02\x02\u0116F\x03" +
		"\x02\x02\x02\u0117\u0118\x07/\x02\x02\u0118H\x03\x02\x02\x02\u0119\u011A" +
		"\x07,\x02\x02\u011AJ\x03\x02\x02\x02\u011B\u011C\x071\x02\x02\u011CL\x03" +
		"\x02\x02\x02\u011D\u011E\x07>\x02\x02\u011EN\x03\x02\x02\x02\u011F\u0120" +
		"\x07>\x02\x02\u0120\u0121\x07?\x02\x02\u0121P\x03\x02\x02\x02\u0122\u0123" +
		"\x07?\x02\x02\u0123R\x03\x02\x02\x02\u0124\u0125\x07\x80\x02\x02\u0125" +
		"T\x03\x02\x02\x02\u0126\u0127\t\x07\x02\x02\u0127V\x03\x02\x02\x02\u0128" +
		"\u0129\t\b\x02\x02\u0129X\x03\x02\x02\x02\u012A\u012B\t\t\x02\x02\u012B" +
		"Z\x03\x02\x02\x02\u012C\u012D\t\n\x02\x02\u012D\\\x03\x02\x02\x02\u012E" +
		"\u012F\t\v\x02\x02\u012F^\x03\x02\x02\x02\u0130\u0131\t\f\x02\x02\u0131" +
		"`\x03\x02\x02\x02\u0132\u0133\t\r\x02\x02\u0133b\x03\x02\x02\x02\u0134" +
		"\u0135\t\x0E\x02\x02\u0135d\x03\x02\x02\x02\u0136\u0137\t\x0F\x02\x02" +
		"\u0137f\x03\x02\x02\x02\u0138\u0139\t\x10\x02\x02\u0139h\x03\x02\x02\x02" +
		"\u013A\u013B\t\x11\x02\x02\u013Bj\x03\x02\x02\x02\u013C\u013D\t\x12\x02" +
		"\x02\u013Dl\x03\x02\x02\x02\u013E\u013F\t\x13\x02\x02\u013Fn\x03\x02\x02" +
		"\x02\u0140\u0141\t\x14\x02\x02\u0141p\x03\x02\x02\x02\u0142\u0143\t\x15" +
		"\x02\x02\u0143r\x03\x02\x02\x02\u0144\u0145\t\x16\x02\x02\u0145t\x03\x02" +
		"\x02\x02\u0146\u0147\t\x17\x02\x02\u0147v\x03\x02\x02\x02\u0148\u014B" +
		"\x07^\x02\x02\u0149\u014C\t\x18\x02\x02\u014A\u014C\x05y=\x02\u014B\u0149" +
		"\x03\x02\x02\x02\u014B\u014A\x03\x02\x02\x02\u014Cx\x03\x02\x02\x02\u014D" +
		"\u014E\x07w\x02\x02\u014E\u014F\x05{>\x02\u014F\u0150\x05{>\x02\u0150" +
		"\u0151\x05{>\x02\u0151\u0152\x05{>\x02\u0152z\x03\x02\x02\x02\u0153\u0154" +
		"\t\x19\x02\x02\u0154|\x03\x02\x02\x02\u0155\u0156\x07*\x02\x02\u0156\u0157" +
		"\x07,\x02\x02\u0157~\x03\x02\x02\x02\u0158\u0159\x07,\x02\x02\u0159\u015A" +
		"\x07+\x02\x02\u015A\x80\x03\x02\x02\x02\u015B\u0160\x05}?\x02\u015C\u015F" +
		"\x05\x81A\x02\u015D\u015F\v\x02\x02\x02\u015E\u015C\x03\x02\x02\x02\u015E" +
		"\u015D\x03\x02\x02\x02\u015F\u0162\x03\x02\x02\x02\u0160\u0161\x03\x02" +
		"\x02\x02\u0160\u015E\x03\x02\x02\x02\u0161\u0163\x03\x02\x02\x02\u0162" +
		"\u0160\x03\x02\x02\x02\u0163\u0164\x05\x7F@\x02\u0164\u0165\x03\x02\x02" +
		"\x02\u0165\u0166\bA\x02\x02\u0166\x82\x03\x02\x02\x02\u0167\u0168\x07" +
		"/\x02\x02\u0168\u0169\x07/\x02\x02\u0169\u016D\x03\x02\x02\x02\u016A\u016C" +
		"\n\x1A\x02\x02\u016B\u016A\x03\x02\x02\x02\u016C\u016F\x03\x02\x02\x02" +
		"\u016D\u016B\x03\x02\x02\x02\u016D\u016E\x03\x02\x02\x02\u016E\u0171\x03" +
		"\x02\x02\x02\u016F\u016D\x03\x02\x02\x02\u0170\u0172\x07\f\x02\x02\u0171" +
		"\u0170\x03\x02\x02\x02\u0171\u0172\x03\x02\x02\x02\u0172\u0173\x03\x02" +
		"\x02\x02\u0173\u0174\bB\x02\x02\u0174\x84\x03\x02\x02\x02\u0175\u0177" +
		"\t\x1B\x02\x02\u0176\u0175\x03\x02\x02\x02\u0177\u0178\x03\x02\x02\x02" +
		"\u0178\u0176\x03\x02\x02\x02\u0178\u0179\x03\x02\x02\x02\u0179\u017A\x03" +
		"\x02\x02\x02\u017A\u017B\bC\x02\x02\u017B\x86\x03\x02\x02\x02\x0E\x02" +
		"\xF5\xF7\xFF\u0105\u010C\u014B\u015E\u0160\u016D\u0171\u0178\x03\b\x02" +
		"\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!yaplLexer.__ATN) {
			yaplLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(yaplLexer._serializedATN));
		}

		return yaplLexer.__ATN;
	}

}

